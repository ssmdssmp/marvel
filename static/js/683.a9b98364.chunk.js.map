{"version":3,"file":"static/js/683.a9b98364.chunk.js","mappings":"wUAsEA,EA9De,WACb,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4CF,EAAAA,EAAAA,WAAS,GAArD,eAAuBG,GAAvB,WACA,GAA4BH,EAAAA,EAAAA,UAAS,KAArC,eAAOI,EAAP,KAAeC,EAAf,KACA,GAAsCL,EAAAA,EAAAA,WAAS,GAA/C,eAAoBM,GAApB,WACA,GAAoDC,EAAAA,EAAAA,KAA5CC,EAAR,EAAQA,aAAR,EAAsBC,QAAtB,EAA+BC,MAA/B,EAAsCC,WAEtCC,EAAAA,EAAAA,YAAU,WACRC,EAAUT,GAAQ,EACnB,GAAE,IACH,IAAMS,EAAY,SAACT,EAAQU,GAClBX,GAAPW,GACAN,EAAaJ,GAAQW,KAAKC,EAC3B,EACKA,EAAqB,SAACC,GAC1B,IAAIC,GAAQ,EACRD,EAAUE,OAAS,IACrBD,GAAQ,GAEVhB,GAAU,SAACD,GAAD,wBAAgBA,IAAhB,OAA2BgB,GAA3B,IACVd,GAAkB,GAClBE,GAAU,SAACD,GAAD,OAAYA,EAAS,CAArB,IACVE,EAAeY,EAChB,EAkBKE,EAjBc,SAACC,GACnB,IAAMD,EAAQC,EAAIC,KAAI,SAACC,EAAMC,GAC3B,OACE,gBAAKC,UAAU,cAAf,UACE,UAAC,KAAD,CAAMC,GAAE,kBAAaH,EAAKI,IAA1B,WACE,gBACEC,IAAKL,EAAKM,UAAUC,KAAO,IAAMP,EAAKM,UAAUE,UAChDC,IAAI,aAEN,gBAAKP,UAAU,eAAf,SAA+BF,EAAKU,SACpC,gBAAKR,UAAU,eAAf,SAA+BF,EAAKW,OAAO,GAAGC,MAAQ,WAPxBX,EAWrC,IACD,OAAO,gBAAKC,UAAU,cAAf,SAA8BL,GACtC,CACagB,CAAYnC,GAE1B,OACE,iCACE,iBAAKwB,UAAU,gBAAf,WACE,gBAAKG,IAAKS,EAAOL,IAAI,wBACrB,qDACyB,6CAEzB,gBAAKJ,IAAKU,EAAON,IAAI,sBAEvB,iBAAKP,UAAU,iBAAf,UACGL,GACD,mBAAQmB,QAAS,kBAAM1B,EAAUT,EAAhB,EAAyBqB,UAAU,MAApD,4BAMP,ECzDD,G,OARmB,WACjB,OACE,+BACE,SAAC,EAAD,KAGL,E,gFCLc,SAASe,EAAmBnB,GACzC,OCJa,SAA4BA,GACzC,GAAIoB,MAAMC,QAAQrB,GAAM,OAAO,EAAAsB,EAAA,GAAiBtB,EAClD,CDES,CAAkBA,IELZ,SAA0BuB,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,EACtH,CFGmC,CAAgBvB,KAAQ,EAAA2B,EAAA,GAA2B3B,IGLvE,WACb,MAAM,IAAI4B,UAAU,uIACtB,CHG8F,EAC9F,C","sources":["components/comics/Comics.js","components/pages/ComicsPage.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport \"./comics.css\";\nimport MarvelService from \"../../services/MarvelService\";\nimport { useEffect } from \"react\";\nimport Logo1 from \"../../comics-header.png\";\nimport Logo2 from \"../../avengers.png\";\nimport { Link } from \"react-router-dom\";\nconst Comics = () => {\n  const [comics, setComics] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(100);\n  const [comicsEnded, setComicsEnded] = useState(false);\n  const { getAllComics, loading, error, getComics } = MarvelService();\n  //   getAllComics();\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n  const onRequest = (offset, init) => {\n    init ? setNewItemLoading(false) : setNewItemLoading(true);\n    getAllComics(offset).then(onComicsListLoaded);\n  };\n  const onComicsListLoaded = (newComics) => {\n    let ended = false;\n    if (newComics.length < 8) {\n      ended = true;\n    }\n    setComics((comics) => [...comics, ...newComics]);\n    setNewItemLoading(false);\n    setOffset((offset) => offset + 8);\n    setComicsEnded(ended);\n  };\n  const renderItems = (arr) => {\n    const items = arr.map((item, i) => {\n      return (\n        <div className=\"comics-item\" key={i}>\n          <Link to={`/comics/${item.id}`}>\n            <img\n              src={item.thumbnail.path + \".\" + item.thumbnail.extension}\n              alt=\"cover #\"\n            />\n            <div className=\"comics-title\">{item.title}</div>\n            <div className=\"comics-price\">{item.prices[0].price + \" $\"}</div>\n          </Link>\n        </div>\n      );\n    });\n    return <div className=\"comics-list\">{items}</div>;\n  };\n  const items = renderItems(comics);\n\n  return (\n    <>\n      <div className=\"comics-header\">\n        <img src={Logo1} alt=\"comics-header-logo\" />\n        <h2>\n          New comics every week! <span>Stay tuned</span>\n        </h2>\n        <img src={Logo2} alt=\"avengers-logo\" />\n      </div>\n      <div className=\"comics-content\">\n        {items}\n        <button onClick={() => onRequest(offset)} className=\"btn\">\n          LOAD MORE\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default Comics;\n","import Comics from \"../comics/Comics\";\nimport Header from \"../header/header\";\n\nconst ComicsPage = () => {\n  return (\n    <>\n      <Comics />\n    </>\n  );\n};\n\nexport default ComicsPage;\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["useState","comics","setComics","setNewItemLoading","offset","setOffset","setComicsEnded","MarvelService","getAllComics","loading","error","getComics","useEffect","onRequest","init","then","onComicsListLoaded","newComics","ended","length","items","arr","map","item","i","className","to","id","src","thumbnail","path","extension","alt","title","prices","price","renderItems","Logo1","Logo2","onClick","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}